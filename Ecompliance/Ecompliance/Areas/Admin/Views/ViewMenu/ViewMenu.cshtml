
@using Ecompliance.Areas.Admin.Models
@using System.Data;
@model Role
@{
    ViewBag.Title = "User Rights";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="maincontainer">
    <div class="top_strap">
        <div class="pull-left">
            <h3 class="page-title">Manage User Rights</h3>
        </div>
        <div class="clearfix"></div>
        @*<div style="margin:0px 0px 10px;"></div>*@
    </div>
    <div>
        <div id="Kgrid"></div>
    </div>
    <div class="col-xs-12 col-sm-12 col-md-12">
        
    </div>
    
</div>

<div id="dialog" class="col-xs-12 col-sm-12 col-md-12 " style="display:none;">
    <div class="">
        <div class="clearfix"></div>
        <div class="row top_content">

            <!-- BEGIN dynamic table2-->
            <div class="portlet box blue">

                <div class="portlet-title">

                    <div class="tools">
                        <a href="javascript:;" class="collapse"></a>
                    </div>
                </div>
                <div class="portlet-body">
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Roles</th>
                                <th><input type="checkbox" name="IsView" class="checkboxes" value="1" onclick="checkUncheckClick(this);" /> <span> View </span></th>
                                <th><input type="checkbox" name="IsCreate" class="checkboxes" value="1" onclick="checkUncheckClick(this);" /> <span> Create </span></th>
                                @*<th><input type="checkbox" name="IsEdit" class="checkboxes" value="1" onclick="checkUncheckClick(this);" /> <span> Is Edit </span></th>*@
                                <th><input type="checkbox" name="IsDel" class="checkboxes" value="1" onclick="checkUncheckClick(this);" /> <span> Delete</span></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                DataSet ds = new DataSet();
                                ds = (DataSet)ViewBag.DsRole;
                                if (ds.Tables[0].Rows.Count > 0)
                                {
                                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                                    {
                                        string id1 = "chk" + ds.Tables[0].Rows[i]["Name"].ToString().Replace(' ','-') + "IsView";
                                        string id2 = "chk" + ds.Tables[0].Rows[i]["Name"].ToString().Replace(' ', '-') + "IsCreate";
                                        string id3 = "chk" + ds.Tables[0].Rows[i]["Name"].ToString().Replace(' ', '-') + "IsEdit";
                                        string id4 = "chk" + ds.Tables[0].Rows[i]["Name"].ToString().Replace(' ', '-') + "IsDel";
                                        <tr>
                                            <td>@ds.Tables[0].Rows[i]["Name"].ToString()</td>
                                            <td style="text-align:center;"> <input name="@ds.Tables[0].Rows[i]["Name"].ToString().Replace(' ','-')" id="@id1" type="checkbox" class="checkboxes rnd" value="1" /> </td>
                                            <td style="text-align:center;"> <input name="IsCreate" id="@id2" type="checkbox" class="checkboxes" value="2" /> </td>
                                            @*<td style="text-align:center;"> <input name="IsEdit" id="@id3" type="checkbox" class="checkboxes" value="4" /> </td>*@
                                            <td style="text-align:center;"> <input name="IsDel" id="@id4" type="checkbox" class="checkboxes" value="4" /> </td>
                                        </tr>
                                    }
                                    }
                                }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="col-xs-12 col-sm-12 col-md-12 allcreditionals">
                <div class="reset_btn" align="right">
                    <input type="reset" value="Reset" id="btnRleRest" class="button reset" />
                    <input type="submit" value="Submit" id="btnRoleSubmit" class="button submit" />
                    <input type="hidden" id="hdnTid" value="0" />
                </div>
            </div>

        </div>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
@section commanscript {

    @Scripts.Render("~/Content/CommanScript")
<script type="text/javascript">
    $(document).ready(function () {
        BindGrid();
        $("#btnRoleSubmit").bind("click", {}, btnRoleClick)
        $("#btnRleRest").click(function () {
            $("input:checkbox").prop('checked', false);
        });
    });
    var Kgrid;
    function BindGrid() {
        var MenuID = 0;
        $.get('@Url.RouteUrl("getMenu")', { MenuID: MenuID }, function (response) {
            var Kgrid = $("#Kgrid").data("kendoGrid");
            if ($(Kgrid).length > 0) {
                $("#Kgrid").data("kendoGrid").destroy();
                $('#Kgrid').empty();
            }
            if (response.IsSuccess) {
                var Data = $.parseJSON(response.Data);
                //var columns = [{ field: "Parent", title: "Parent" ,lockable: true,},{ field: "Name", title: "Name" }];
                var columns = [ { field: "Name", title: "Name" }];
                var CommanObj = {

                    command: [{ name: "Edit",text: "", imageClass: "k-icon k-edit", click: EditHandler, title: "" }
                    ],
                    title: "Action", width: 100
                };
                columns.push(CommanObj);
                var Data =
                Kgrid = $("#Kgrid").kendoGrid({
                    dataSource: {
                        data: Data,
                        pageSize: 100
                        //,group: [{ field: "Parent", title: "Parent Menu" }]
                    },
                    
                    pageable: false,
                    filterable: true,
                    sortable: true,
                    groupable: false,
                    pageable: {
                        //refresh: true,
                        pageSizes: true,
                        buttonCount: 5
                    },
                    dataBound: ShowToolTip,
                    noRecords: true,
                    //height:300,
                    resizable: true,
                    columns: columns,
                    columnMenu: true

                });
            }
        });
    }
    function ShowToolTip() {
        $(".k-icon.k-edit").parent().attr("title", "Edit");

        $(".k-icon.k-edit").parent().kendoTooltip({
            width: 60,
            position: "top"
        }).data("kendoTooltip");
    }
    function checkUncheckClick(obj) {
        if (obj.checked) {
            if (obj.name == "IsView")
                $(".rnd").prop("checked", true);
            else
                $('input:checkbox[name="' + obj.name + '"]').prop('checked', true);
        }
        else {
            if (obj.name == "IsView")
                $(".rnd").prop("checked", false);
            else
                $('input:checkbox[name="' + obj.name + '"]').prop('checked', false);
        }
    }
    var EditHandler = function EditHandler(e) {
        e.preventDefault();
        $("input:checkbox").prop('checked', false);
        dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var Tid = dataItem.TID;
        $("#hdnTid").val(Tid);
        $.get('@Url.RouteUrl("getMenu")', { MenuID: Tid }, function (response) {
            if (response.IsSuccess) {
                var Data = $.parseJSON(response.Data);
                var Role = Data[0].Roles;
                var Role = Data[0].Roles.replace(/{/g, "").replace(/}/g, "");
                //alert(Role);
                var arrRole = Role.split(",");
                for(var i=0; i<arrRole.length; i++)
                {
                    var arrRole1 = arrRole[i].split(':');
                    if (arrRole1[1] == "1") {
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                    }
                    if (arrRole1[1] == "2") {
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                    }
                    if (arrRole1[1] == "3") {
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                    }
                    if (arrRole1[1] == "4") {
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    }
                    if (arrRole1[1] == "5") {
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    }
                    if (arrRole1[1] == "6") {
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    }
                    if (arrRole1[1] == "7") {
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                        $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    }
                    //if (arrRole1[1] == "8") {
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    //}
                    //if (arrRole1[1] == "9") {
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    //}
                    //if (arrRole1[1] == "10") {
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    //}
                    //if (arrRole1[1] == "11") {
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsEdit").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    //}
                    //if (arrRole1[1] == "12") {
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    //}
                    //if (arrRole1[1] == "13") {
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsEdit").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    //}
                    //if (arrRole1[1] == "14") {
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsEdit").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    //}
                    //if (arrRole1[1] == "15")
                    //{
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsView").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsCreate").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsEdit").prop('checked', true);
                    //    $("#chk" + arrRole1[0].replace(/ /g, "-") + "IsDel").prop('checked', true);
                    //}
                }
            }
        });

        $("#dialog").dialog({
            //autoOpen: false,
            width: 550,
            title: "Manage Rights",
            closeText: ""
        });
        event.preventDefault();
    }
    function btnRoleClick()
    {
        var finalRole = "";
        $(".rnd").each(function () {
            var num =0;
            //alert($(this).attr("name"));
            var Role = $(this).attr("name");
            //var IsViewVal = $("#chk" + Role + "IsView").attr('checked').val();
            var IsViewVal = $("#chk" + Role + "IsView:checked").val();
            var IsCreateVal = $("#chk" + Role + "IsCreate:checked").val();
            var IsEditVal = $("#chk" + Role + "IsEdit:checked").val();
            var IsDelVal = $("#chk" + Role + "IsDel:checked").val();

            if (IsViewVal != undefined)
                num += parseInt(IsViewVal);
            if (IsCreateVal != undefined)
                num += parseInt(IsCreateVal);
            if (IsEditVal != undefined)
                num += parseInt(IsEditVal);
            if (IsDelVal != undefined)
                num += parseInt(IsDelVal);
            if (num != 0) {
                if (finalRole == "")
                    finalRole += "{" + Role + ":" + num + "}"
                else
                    finalRole += ",{" + Role + ":" + num + "}"
            }
        });
        //alert(finalRole);
        var MenuID = $("#hdnTid").val();
        //alert($("#hdnTid").val());
        var form = $('#__AjaxAntiForgeryForm');
        var token = $('input[name="__RequestVerificationToken"]', form).val();

        $.post('@Url.RouteUrl("UpdateMenuRole")', { __RequestVerificationToken: token, TID: MenuID, Role: finalRole }, function (response) {
            if(response.IsSuccess)
            {
                createSuccessPOPForRoleAssignment(response.Message);
            }
        });
    }

    function createSuccessPOPForRoleAssignment(strMsg) {
        debugger;
        var rlDiv = document.getElementById("popSuccessRoleAssignment");
        var objDiv = null;
        if (rlDiv == null) {
            var strHTML = "<div id=\"popSuccessRoleAssignment\" class=\"popError\" style=\"display: none;\">" +
                                "<div class='popwrapper'>" +
                                    //"<div class=\"header sucMsg\"><img src=\"../../content/images/iconCheck.png\" alt=\"\">Success</div>" +
                                    "<div></div><br/>" +
                                    "<p style='margin:10px 0 40px 0; float:left; color: green; font-weight: bold;' id=\"popSucMsg\">" + strMsg + "</p>" +
                                "</div>" +
                                "<div class='footer'>" +
                                    //"<div class='tip'></div>" +
                                    "<div><input name=\"\" id=\"btnSuccessOK\" type=\"button\" value=\"Ok\" class=\"ok button\" onclick=\"javascript:$('#popSuccessRoleAssignment').dialog('close');\"></div>" +
                                "</div>" +
                          "</div>";
            objDiv = document.createElement('div');
            objDiv.setAttribute('id', 'RLWrapper');
            objDiv.style.display = "none";
            objDiv.innerHTML = strHTML;
            document.body.appendChild(objDiv);
        }
        else {
            $('#popSucMsg').html(strMsg);
        }
        $("#popSuccessRoleAssignment").dialog({
            closeOnEscape: false,
            modal: true,
            title: "Success",
            width: 425
        });
        $('#popSuccessRoleAssignment').parent().children().children('.ui-dialog-titlebar-close').hide();
    }
</script>
}