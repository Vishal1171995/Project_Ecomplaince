@model  Ecompliance.ViewModel.ChangePasswordVM
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Ajax.BeginForm("ChangePassword", "Account", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess" }, new { @autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div class="container outercontainer">
        <div class="">
            <div class="top_strap">
                <div class="pull-left">
                    <h3 class="page-title">Change Password </h3>
                </div>

                <div class="clearfix"></div>
                <div style="margin:0px 0px 10px;"></div>
            </div>

            <div class="col-xs-12 col-sm-3 col-md-3">
            </div>

            <div class="col-xs-12 col-sm-6 col-md-6">
                <!--BEGIN Form-->
                <div class="row" style="margin-top:10px;">
                    <div class="col-xs-6 col-sm-4 col-md-4 allcreditionals allheight">
                        <label>Your Current Password</label>
                    </div>
                    <div class="col-xs-6 col-sm-8 col-md-8 allcreditionals allheight">
                        @Html.PasswordFor(x => x.Password, new
                   {
                       @autocomplete = "off",
                       @readonly = "readonly",
                       @onfocus = "$(this).removeAttr('readonly');"
                   })
                     @Html.ValidationMessageFor(x => x.Password)
                    </div>
                    
                    <div class="col-xs-6 col-sm-4 col-md-4 allcreditionals allheight">
                        <label>New Password</label>
                    </div>
                    <div class="col-xs-6 col-sm-8 col-md-8 allcreditionals allheight">
                        @Html.PasswordFor(x => x.NewPassword, new
                   {
                       @autocomplete = "off",
                       @readonly = "readonly",
                       @onfocus = "$(this).removeAttr('readonly');"
                   })
                        @Html.ValidationMessageFor(x => x.NewPassword)
                        @*<input name="new password" type="password" id="new password" />*@
                    </div>
                    <div class="col-xs-6 col-sm-4 col-md-4 allcreditionals allheight">
                        <label>Retype Password</label>
                    </div>
                    <div class="col-xs-6 col-sm-8 col-md-8 allcreditionals allheight">
                        @Html.PasswordFor(x => x.ConfirmPassword, new
                   {
                       @autocomplete = "off",
                       @readonly = "readonly",
                       @onfocus = "$(this).removeAttr('readonly');"
                   })
                        @Html.ValidationMessageFor(x => x.ConfirmPassword)
                        @*<input name="retype password" type="password" id="retype password" />*@
                    </div>

                    <div class="col-xs-12 col-sm-12 col-md-12 allcreditionals">
                        <div class="reset_btn" align="right">
                            <input type="submit" value="Submit" class="button submit" />
                            <input id="btnReset" value="Reset" class="button reset" type="reset">
                        </div>
                    </div>
                </div>
                <!--END Form-->
            </div>

            <div class="col-xs-12 col-sm-3 col-md-3">
            </div>

            <!-----------------end of popup model------------>
        </div>
    </div>
}

@section commanscript {
    @Scripts.Render("~/Content/CommanScript")
    <script type="text/javascript">
        function OnSuccess(e) {
            HandleResponse(e, "", "btnReset", "");
        }
    </script>
}